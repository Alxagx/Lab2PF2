import java.util.ArrayList;
import java.util.List;

public class RaceTrack {
    public static void main(String[] args) {

        Car car1 = new Car(
                "Bob Barker car",
                0.30f,
                0.62f,
                0.1f,
                0,
                0,
                0.93f,
                0.11f,
                0,
                '1'
        );
        Car car2 = new Car(
                "Pat Sajak car",
                0.45f,
                0.65f,
                0.3f,
                0,
                0,
                0.75f,
                0.08f,
                0,
                'P'

        );
        Car car3 = new Car("Alex Trebek car",
                0.29f,
                0.55f,
                0.02f,
                0,
                0,
                0.83f,
                0.19f,
                0,
                'A'
        );
        Car car4 = new Car(
                "Bob Eubanks car",
                0.15f,
                0.20f,
                0.03f,
                0,
                0,
                0.9f,
                0.21f,
                0,
                'D'
        );
        Car car5 = new Car(
                "Richard Dawson Car",
                0.40f,
                0.5f,
                0.35f,
                0,
                0,
                0.675f,
                0.19f,
                0,
                'R'
        );

        List<Car> cars = new ArrayList<>();
        cars.add(car1);
        cars.add(car2);
        cars.add(car3);
        cars.add(car4);
        cars.add(car5);


        String car1Name = "Bob Barker Car";
        float car1HandlingS = 0.30f;
        float car1HandlingC = 0.62f;
        float car1HandlingU = 0.1f;
        float car1RaceProgress = 0;
        float car1CurrentSpeed = 0;
        float car1TopSpeed = 0.93f;
        float car1Acceleration = 0.11f;
        int car1Wins = 0;
        char car1Symbol = '1';


        String Racetrack = "----------U-C-S-------C---S----C----C--U----";
        int raceLength = Racetrack.length();


        boolean runningRace = true; //once someone wins we can stop this
        while (runningRace) {
            System.out.println(Racetrack);


            cars.forEach(Car::printCarProgress);


            //accelerate based on where you are on the track
            //Racetrack[(int)car1RaceProgress)]
            switch (Racetrack.charAt((int) car1RaceProgress)) {
                case '-' -> { //strait-away
                    if (car1CurrentSpeed < car1TopSpeed)
                        car1CurrentSpeed += car1Acceleration;
                    if (car1CurrentSpeed > car1TopSpeed)
                        car1CurrentSpeed = car1TopSpeed;
                }
                case 'S' -> { //Chicane
                    if (car1CurrentSpeed < car1TopSpeed * car1HandlingS)
                        car1CurrentSpeed += car1Acceleration;
                    else if (car1CurrentSpeed > car1TopSpeed * car1HandlingS)
                        car1CurrentSpeed = car1TopSpeed * car1HandlingS;
                }
                case 'C' -> { //curve
                    if (car1CurrentSpeed < car1TopSpeed * car1HandlingC)
                        car1CurrentSpeed += car1Acceleration;
                    else if (car1CurrentSpeed > car1TopSpeed * car1HandlingC)
                        car1CurrentSpeed = car1TopSpeed * car1HandlingC;
                }
                case 'U' -> { //Hairpin
                    if (car1CurrentSpeed < car1TopSpeed * car1HandlingU)
                        car1CurrentSpeed += car1Acceleration;
                    else if (car1CurrentSpeed > car1TopSpeed * car1HandlingU)
                        car1CurrentSpeed = car1TopSpeed * car1HandlingU;
                }
            }
            //increase progress
            car1RaceProgress += car1CurrentSpeed;

            if (car1RaceProgress >= raceLength) {
                System.out.println(car1Name + " wins");
                car1Wins++;
                runningRace = false;
            }
        }    //end of while loop
    }//end of main

}
